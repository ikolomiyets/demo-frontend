{"version":3,"sources":["/Users/ikolomiyets/work/demo-frontend/src/$_lazy_route_resource lazy","/Users/ikolomiyets/work/demo-frontend/src/app/app.component.css","/Users/ikolomiyets/work/demo-frontend/src/app/app.component.html","/Users/ikolomiyets/work/demo-frontend/src/app/app.component.ts","/Users/ikolomiyets/work/demo-frontend/src/app/app.module.ts","/Users/ikolomiyets/work/demo-frontend/src/app/state/app.actions.ts","/Users/ikolomiyets/work/demo-frontend/src/app/state/app.efects.ts","/Users/ikolomiyets/work/demo-frontend/src/app/state/app.reducers.ts","/Users/ikolomiyets/work/demo-frontend/src/environments/environment.ts","/Users/ikolomiyets/work/demo-frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ikolomiyets/work/demo-frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ikolomiyets/work/demo-frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <div class=\\\"h1 my-4\\\">Policies List</div>\\n  <table class=\\\"table table-sm table-hover table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th>#</th>\\n      <th>Policy Number</th>\\n      <th>Start Date</th>\\n      <th>Insured</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let policy of (state | async).policies; let i = index\\\">\\n        <th scope=\\\"row\\\">{{i + 1}}</th>\\n        <td>{{policy.policyNumber}}</td>\\n        <td>{{policy.startDate | date: 'dd/MM/yyyy' }}</td>\\n        <td><a (click)=\\\"showInsured(customers, policy.policyNumber, policy.insured)\\\" style=\\\"cursor: pointer;\\\">View</a></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <ng-template #customers let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\">Insured for policy No. {{policyNumber}}</h5>\\n      <button class=\\\"close\\\" (click)=\\\"d()\\\" style=\\\"cursor: pointer;\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <table class=\\\"table-sm table-hover table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>#</th>\\n          <th>Last Name</th>\\n          <th>First Name</th>\\n          <th>Address</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let customer of (state | async).insured; let i = index\\\">\\n          <th scope=\\\"row\\\">{{i + 1}}</th>\\n          <td>{{customer.lastName}}</td>\\n          <td>{{customer.firstName}}</td>\\n          <td>{{customer.address}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"d()\\\" style=\\\"cursor: pointer;\\\">Dismiss</button>\\n    </div>\\n  </ng-template>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ikolomiyets/work/demo-frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport * as fromApp from './state/app.reducers';\nimport * as fromAppAction from './state/app.actions';\nimport { Store } from '@ngrx/store';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  state: Store<fromApp.AppState>;\n  insured: number[];\n  policyNumber: string;\n\n  constructor(private store: Store<{app: fromApp.AppState}>, private modalService: NgbModal) {}\n  ngOnInit(): void {\n    this.state = this.store.select('app');\n    this.store.dispatch(new fromAppAction.DoLoadPolicies({first: 1, count: 10}));\n  }\n\n  showInsured(content, policyNumber, insured: number[]) {\n    this.store.dispatch(new fromAppAction.DoResetInsured());\n    this.policyNumber = policyNumber;\n    this.store.dispatch(new fromAppAction.DoInitCustomerRetrieval(insured));\n\n    this.modalService.open(content);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { StoreModule } from '@ngrx/store';\nimport { appReducer } from './state/app.reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppEfects } from './state/app.efects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AngularFontAwesomeModule,\n    NgbModule.forRoot(),\n    StoreModule.forRoot({app: appReducer}),\n    EffectsModule.forRoot([AppEfects]),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/app/app.module.ts","import { Action } from '@ngrx/store';\nimport { Insured, Policies } from '../model/policy.model';\n\nexport const DO_LOAD_POLICIES = 'LOAD_POLICIES';\nexport const POLICIES_RECEIVED = 'POLICIES_RECEIVED';\nexport const DO_INIT_CUSTOMER_RETRIEVAL = 'DO_INIT_CUSTOMER_RETRIEVAL';\nexport const DO_RESET_INSURED = 'DO_RESET_INSURED';\nexport const DO_RETRIEVE_CUSTOMER = 'DO_RETRIEVE_CUSTOMER';\nexport const CUSTOMER_RECEIVED = 'CUSTOMER_RECEIVED';\n\nexport class DoLoadPolicies implements Action {\n  readonly type = DO_LOAD_POLICIES;\n\n  constructor(public payload: { first: number, count: number }) {}\n}\n\nexport class PoliciesReceved implements Action {\n  readonly type = POLICIES_RECEIVED;\n\n  constructor(public payload: Policies) {}\n}\n\nexport class DoInitCustomerRetrieval implements Action {\n  readonly type = DO_INIT_CUSTOMER_RETRIEVAL;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class DoResetInsured implements Action {\n  readonly type = DO_RESET_INSURED;\n\n  constructor() {}\n}\n\nexport class DoRetrieveCustomer implements Action {\n  readonly type = DO_RETRIEVE_CUSTOMER;\n\n  constructor(public payload: number) {}\n}\n\nexport class CustomerReceived implements Action {\n  readonly type = CUSTOMER_RECEIVED;\n\n  constructor(public payload: Insured) {}\n}\n\nexport type AppActions = DoLoadPolicies |\n  PoliciesReceved |\n  DoInitCustomerRetrieval |\n  DoResetInsured |\n  DoRetrieveCustomer |\n  CustomerReceived;\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/app/state/app.actions.ts","import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { HttpClient } from '@angular/common/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\n\nimport * as fromAppActions from './app.actions';\nimport { Insured, Policies } from '../model/policy.model';\n\n@Injectable()\nexport class AppEfects {\n  @Effect()\n  doLoadPolicies = this.actions$\n    .ofType(fromAppActions.DO_LOAD_POLICIES)\n    .map((action: fromAppActions.DoLoadPolicies) => action.payload)\n    .switchMap((payload: {first: number, count: number}) => {\n      return this.http.get<Policies>('/policies');\n    })\n    .map((policies) => {\n      return {\n        type: fromAppActions.POLICIES_RECEIVED,\n        payload: policies\n      };\n    });\n\n  @Effect()\n  doInitCustomerRetrieval = this.actions$\n    .ofType(fromAppActions.DO_INIT_CUSTOMER_RETRIEVAL)\n    .map((action: fromAppActions.DoInitCustomerRetrieval) => action.payload)\n    .flatMap((insured: number[]) => {\n      const result = [];\n      for (const id of insured) {\n        result.push({ type: fromAppActions.DO_RETRIEVE_CUSTOMER, payload: id});\n      }\n\n      return result;\n    });\n\n  @Effect()\n  doRetrieveCustomer = this.actions$\n    .ofType(fromAppActions.DO_RETRIEVE_CUSTOMER)\n    .map((action: fromAppActions.DoRetrieveCustomer) => action.payload)\n    .switchMap((payload: number) => {\n      console.log('Retrieving ', payload);\n      return this.http.get<Insured>('/customers/' + payload);\n    })\n    .map((insured) => {\n      console.log('Retrieved', insured);\n      return {\n        type: fromAppActions.CUSTOMER_RECEIVED,\n        payload: insured\n      };\n    });\n\n  constructor(private http: HttpClient,\n              private actions$: Actions) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/app/state/app.efects.ts","import * as fromAppActions from './app.actions';\nimport { Insured, Policy } from '../model/policy.model';\n\nexport interface AppState {\n  policies: Policy[];\n  insured: Insured[];\n}\n\nexport const initialState: AppState = {\n  policies: [],\n  insured: []\n};\n\nexport function appReducer(state = initialState, action: fromAppActions.AppActions) {\n  switch (action.type) {\n    case fromAppActions.POLICIES_RECEIVED:\n      return {\n        ...state,\n        policies: action.payload.policies\n      };\n    case fromAppActions.DO_RESET_INSURED:\n      return {\n        ...state,\n        insured: []\n      };\n    case fromAppActions.CUSTOMER_RECEIVED:\n      return {\n        ...state,\n        insured: [...state.insured, action.payload]\n      };\n    default:\n      return state;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/app/state/app.reducers.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/ikolomiyets/work/demo-frontend/src/main.ts"],"sourceRoot":"webpack:///"}